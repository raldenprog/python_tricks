"""
pyinstrument

https://habr.com/ru/post/532774/
При долгой работе с большим проектом так или иначе упираешься в поиск узких мест в коде.
Что только программисты не используют для этого — от навороченных профайлеров и брейкпоинтов до выводов print и
замеров времени выполнения вручную с выводом таймстампов на консоль.

Теперь в свой арсенал можно добавить профайлер pyinstrument. Традиционные профайлеры по шагам отслеживают выполнение
программы, а pyinstrument реализуется концепцию статистического профайлинга — это когда профайлер не вмешивается в
выполнение кода, а лишь записывает состояние стека вызова с определенной периодичностью.

Такой подход снижает тормоза при профилировании программы. Видно, что оверхед на статистическое профилирование
несравнимо меньше, чем при применении стандартных профайлеров.
"""
from pyinstrument import Profiler

profiler = Profiler()
profiler.start()

# Ваш код для профилирования

profiler.stop()

print(profiler.output_text(unicode=True, color=True))
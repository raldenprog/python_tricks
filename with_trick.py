"""
Поддержка инструкции with в собственных объектах
Что такое менеджер контекста?
Это простой «протокол» (или интерфейс), который ваш объект должен соблюдать для того,
чтобы поддерживать инструкцию with. В сущности, если вы хотите, чтобы объект функционировал как менеджер контекста,
от вас требуется только одно — добавить в него методы __enter__ и __exit__.
Python будет вызывать эти два метода в соответствующих случаях в цикле управления ресурсом.

* Инструкция with упрощает обработку исключений путем инкапсуляции стандартных случаев применения инструкций try/finally
    в так называемые менеджеры контекста.
* Чаще всего менеджер контекста используется для управления без- опасным получением и высвобождением системных ресурсов.
* Ресурсы выделяются при помощи инструкции with и высвобождаются автоматически,
    когда поток исполнения покидает контекст with.
* Эффективное применение инструкции with помогает избежать утечки ресурсов и облегчает ее восприятие.
"""


class ManagedFile:
    """
    Пример класса работающего как менеджер контекста
    """
    def __init__(self, name):
        """
        Инициализация имени файла
        Args:
            name (str): имя файла
        """
        self.name = name

    def __enter__(self):
        """
        Позволяет задать действия для инициализации контекста.
        В данном случае возвращает открытый файл
        """
        self.file = open(self.name, 'w')
        return self.file

    def __exit__(self, exc_type, exc_val, exc_tb):
        """
        Позволяет задать действия для финализации контекста.
        Метод выполняется при выходе из контекста
        Args:
            exc_type (): Тип зафиксированного исключения, либо None.
            exc_val (): Объект зафиксированного исключения, либо None.
            exc_tb (): Трассировка стека для зафиксированного исключения, либо None.

        Returns:

        """
        if self.file:
            self.file.close()


with ManagedFile('managed_file.txt') as f:
    f.write('привет, мир!')
    f.write('а теперь, пока!')
